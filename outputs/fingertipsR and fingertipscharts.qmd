---
title: "fingertipsR and fingertipscharts"
subtitle: "Fingertips data huddle"
author: "Seb Fox"
format: 
  pptx:
    reference-doc: bnssg.pptx
editor: source
---

```{r}
#| label: libraries
#| warning: false
#| echo: false
#| message: false

source(here::here("R/00_libraries.R"))
```

## Outline

1. [Fingertips](https://fingertips.phe.org.uk/) quick overview
2. The Fingertips API
3. `fingertipsR`
4. `fingertipscharts`
5. Further resources

## Fingertips

[Fingertips](https://fingertips.phe.org.uk/) is a platform containing nearly 2,000 indicators of public health in England.

It presents data at different geographies, and in many cases can be cut in different age groups, sexes and time periods.

For many indicators, significance testing is performed to give added insight into how areas are performing when compared to their peers.

It presents the data in many different visualisations that can be used for different purposes.

## The Fingertips Application Programming Interface (API)

The Fingertips API is here: (https://fingertips.phe.org.uk/api)

It underpins the website, so every visualisation on the website will have an equivalent API call.

Most of the calls provide the data in JSON format (very lightweight), though there are some that return data in csv format.

# fingertipsR

## fingertipsR

### What does the package do?

Simply put, the package translates user inputs into a url, which maps to the Fingertips API. It then imports data from the API into the users R workspace.

The package accesses the internet, so a network connection is required when you use it. Also, the amount of data you are importing will affect the time it takes to import it.

This is a typical url generated (for a csv file):

*https://fingertips.phe.org.uk/api/all_data/csv/by_indicator_id?indicator_ids=91280&child_area_type_id=221&parent_area_type_id=6&include_sortable_time_periods=yes*

And this is a typical url generated (for a JSON):

*https://fingertips.phe.org.uk/api/trend_data/specific_indicators_for_child_areas?area_type_id=221&parent_area_code=E40000006&indicator_ids=91280*

## fingertips_data: the main function

These are the arguments that the user can provide to `fingertips_data()`

```{r}
#| label: fingertips-data
#| eval: false
#| echo: true

fingertips_data(IndicatorID = NULL, 
                AreaCode = NULL, 
                DomainID = NULL,
                ProfileID = NULL, 
                AreaTypeID, 
                ParentAreaTypeID = NULL, 
                categorytype = FALSE,
                rank = FALSE, 
                url_only = FALSE, 
                path) 
```

## Other useful functions

1. `indicators()`
2. `profiles()`
3. `indicator_areatypes()`
4. `area_types()`

## Common problems

1. `AreaTypeID` mismatch with `IndicatorID`
2. Multiple age groups/sex within data, therefore analysis not adding up to what is expected
3. Script worked one day but not the week after; Fingertips updates its data on the 1st Tuesday of each month. Sometimes this means indicators are removed or changed. The API is live...
4. What does `ParentAreaTypeID` refer to? See "Areas grouped by" on Fingertips website
5. Any other issues, please check here and report them if they aren't covered: https://github.com/ropensci/fingertipsR/issues

## Accessing the documentation

To access the documentation for a function, put a question mark in front of it within your console: `?fingertips_data`

(hint: you can also double click on the function in a script and press F1 on the keyboard)

# fingertipscharts

## fingertipscharts

`fingertipscharts` is a package that attempts to recreate visualisations that you find on the Fingertips website.

The structure of the data required for `fingertipscharts` is the same as that that comes out of `fingertipsR`, but you can provide your own data too.

```{r}
#| label: data
#| echo: false
#| cache: true
df_overarching_phof <- fingertipsR::fingertips_data(
        DomainID = 1938132696,
        AreaTypeID = 502,
        ParentAreaTypeID = 6,
        rank = TRUE
)

df_populations_all <- fingertips_data(
  IndicatorID = 92708,
  AreaTypeID = 402
)

```

```{r}
#| label: munging
#| echo: false

### Overview

region_code <- "E12000008" 
top_names <- df_overarching_phof |> 
  filter(ParentCode == region_code) |> 
  distinct(AreaCode, AreaName) |> 
  head(6) |> 
  pull(AreaName) |> 
  unique()

region_name <- df_overarching_phof |> 
  filter(AreaCode == region_code) |> 
  pull(AreaName) |> 
  unique()

top_names <- c(
  region_name, top_names
)

indicatorIDs <- c(
  90366,
  108,
  40401,
  40501,
  41001
)

df_overview <- df_overarching_phof |> 
  filter(AreaName %in% top_names,
         IndicatorID %in% indicatorIDs) |> 
  group_by(IndicatorID) |> 
  filter(TimeperiodSortable == max(TimeperiodSortable),
         Sex == "Female") |> 
  ungroup() |> 
  mutate(
    Value = round(Value, 2)
  )

### Compare indicators

df_compare_indicators <- df_overarching_phof %>%
  filter(IndicatorName %in% c("Life expectancy at birth",
                              "Under 75 mortality rate from all causes")) %>%
  group_by(IndicatorName) |> 
  filter(TimeperiodSortable == max(TimeperiodSortable),
         Sex == "Female",
         !is.na(Value)) |> 
  ungroup() |> 
  select(IndicatorName, AreaName, Value) %>%
  tidyr::pivot_wider(
    names_from = IndicatorName,
    values_from = Value)

### Map
ordered_levels <- c("Better",
                    "Similar",
                    "Worse",
                    "Not compared")


df_map <- df_overarching_phof %>%
  filter(IndicatorName == "Life expectancy at birth") %>%
  group_by(IndicatorName) |> 
  filter(TimeperiodSortable == max(TimeperiodSortable),
         Sex == "Female",
         !is.na(Value)) |> 
  ungroup() %>%
  rename(Significance = "ComparedtoEnglandvalueorpercentiles") |> 
  mutate(Significance =
           factor(Significance,
                  levels = ordered_levels))

ons_api <- "https://services1.arcgis.com/ESMARspQHYMw9BZ9/arcgis/rest/services/Counties_and_Unitary_Authorities_December_2021_EN_BUC/FeatureServer/0/query?outFields=*&where=1%3D1&f=geojson"


### trend

df_trend <- df_overarching_phof |> 
  filter(
    IndicatorID == 90366,
    Sex == "Female") |> 
  rename(Significance = "ComparedtoEnglandvalueorpercentiles")

### compare_areas

df_compare_areas <- df_overarching_phof |> 
  filter(IndicatorID == 90366,
         Sex == "Female",
         AreaName %in% top_names) |> 
  filter(TimeperiodSortable == max(TimeperiodSortable)) |> 
  rename(Significance = "ComparedtoRegionvalueorpercentiles") |> 
  mutate(Significance =
           factor(Significance,
                  levels = ordered_levels))

ordered_levels <- c("Better",
                    "Similar",
                    "Worse",
                    "Not compared")

### area_profiles

df_area_profiles <- df_overarching_phof |> 
  group_by(IndicatorID) |> 
  filter(
    IndicatorID %in% indicatorIDs,
    TimeperiodSortable == max(TimeperiodSortable),
    Sex == "Female"
  ) |> 
  ungroup() |> 
  rename(Significance = "ComparedtoEnglandvalueorpercentiles")

### population

df_population <- df_populations_all |> 
  filter(TimeperiodSortable == max(TimeperiodSortable),
         Sex %in% c("Male", "Female"),
         Age != "All ages") |> 
  mutate(
    Age = factor(Age,
                 levels = c(
                   "0-4 yrs", "5-9 yrs", "10-14 yrs",
                   "15-19 yrs", "20-24 yrs", "25-29 yrs",
                   "30-34 yrs", "35-39 yrs", "40-44 yrs",
                   "45-49 yrs", "50-54 yrs", "55-59 yrs",
                   "60-64 yrs", "65-69 yrs", "70-74 yrs",
                   "75-79 yrs", "80-84 yrs", "85-89 yrs",
                   "90+ yrs"   
                 ))
  )

### box_plots

df_box_plots <- df_overarching_phof |> 
  filter(IndicatorID == 90366,
         Sex == "Female",
         AreaType == "Counties & UAs (from Apr 2023)")



```

# Common functions

## overview()

::: columns
::: {.column width="40%"}
```{r}
#| label: overview-code
#| eval: true
#| echo: true
p <- overview(
  data = df_overview,
  area = AreaName,
  indicator = IndicatorName,
  value = Value,
  fill = ComparedtoRegionvalueorpercentiles,
  timeperiod = Timeperiod,
  top_areas = top_names, 
  wrap_length = 40,
  value_label_size = 0.7   
)

```
:::

::: {.column width="60%"}
```{r}
#| label: overview
#| echo: false

p
```
:::
:::

## compare_indicators()

::: columns
::: {.column width="40%"}
```{r}
#| label: compare_indicators-code
#| eval: true
#| echo: true
p <- compare_indicators(
  data = df_compare_indicators,
  x = `Life expectancy at birth`,
  y = `Under 75 mortality rate from all causes`,
  xlab = "Life expectancy at birth (female)",
  ylab = "Under 75 mortality rate from all causes (female)",
  highlight = c("Leeds", "Hertfordshire"),
  area = AreaName,
  add_R2 = TRUE)

```
:::

::: {.column width="60%"}
```{r}
#| label: compare_indicators
#| echo: false

p
```
:::
:::

## map()

::: columns
::: {.column width="40%"}
```{r}
#| label: map-code
#| eval: true
#| echo: true
p <- fingertipscharts::map(
  data = df_map,
  ons_api = ons_api,
  area_code = AreaCode,
  fill = Significance,
  title = "Healthy life expectancy at birth (female)",
  subtitle = "Compared to England",
  copyright_size = 3
)

```
:::

::: {.column width="60%"}
```{r}
#| label: map
#| echo: false
#| fig-width: 6
#| fig-height: 8

p
```
:::
:::

## trend()

::: columns
::: {.column width="40%"}
```{r}
#| label: trend-code
#| eval: true
#| echo: true
p <- trends(
  data = df_trend,
  timeperiod = Timeperiod,
  value = Value,
  area = AreaName,
  comparator = "England",
  area_name = "Blackburn with Darwen",
  fill = Significance,
  lowerci = LowerCI95.0limit,
  upperci = UpperCI95.0limit,
  title = "Healthy life expectancy at birth (female)",
  subtitle = "Blackburn with Darwen compared with England",
  xlab = "Year",
  ylab = "Years"
)

```
:::

::: {.column width="60%"}
```{r}
#| label: trend
#| echo: false

p
```
:::
:::

## compare_areas()

::: columns
::: {.column width="40%"}
```{r}
#| label: compare-areas-code
#| eval: true
#| echo: true
p <- compare_areas(
  data = df_compare_areas,
  area = AreaName,
  value = Value,
  fill = Significance,
  lowerci = LowerCI95.0limit,
  upperci = UpperCI95.0limit,
  order = "desc",
  top_areas = "South East region",
  title = "Healthy life expectancy at birth (female)"
)

```
:::

::: {.column width="60%"}
```{r}
#| label: compare-areas
#| echo: false

p
```
:::
:::

## area_profiles()

::: columns
::: {.column width="40%"}
```{r}
#| label: area-profiles-code
#| eval: true
#| echo: true
p <- area_profiles(
  data = df_area_profiles,
  value = Value,
  count = Count,
  area_code = AreaCode,
  local_area_code = "E06000008",
  indicator = IndicatorName,
  timeperiod = Timeperiod,
  trend = Trend,
  polarity = Polarity,
  significance = Significance,
  area_type = AreaType,
  cols = "fingertips",
  median_line_area_code = "E92000001",
  comparator_area_code = "E12000002",
  datatable = FALSE,
  relative_point_size = 4
  )

```
:::

::: {.column width="60%"}
```{r}
#| label: area-profiles
#| echo: false
#| fig-width: 7
#| fig-height: 7

p
```
:::
:::

## population()

::: columns
::: {.column width="40%"}
```{r}
#| label: population-code
#| eval: true
#| echo: true
p <- population(
  data = df_population,
  value = Value,
  sex = Sex,
  age = Age,
  area = AreaName,
  area_name = "Blackburn with Darwen",
  comparator_1 = "England",
  comparator_2 = "North West region",
  title = "Age Profile of Blackburn with Darwen compared with\nNorth West Region and England",
  subtitle = "In 2021",
  xlab = "% of total population"
)

```
:::

::: {.column width="60%"}
```{r}
#| label: population
#| echo: false
#| fig-width: 6
#| fig-height: 7
p
```
:::
:::

## box_plots()

::: columns
::: {.column width="40%"}
```{r}
#| label: box-plots-code
#| eval: true
#| echo: true
p <- box_plots(
  data = df_box_plots,
  timeperiod = Timeperiod,
  value = Value,
  title = "Distribution of life expectancies for local authorities",
  subtitle = "Female",
  ylab = "Years"
)


```
:::

::: {.column width="60%"}
```{r}
#| label: box-plots
#| echo: false

p
```
:::
:::

## Further resources

* [This GitHub repo](https://github.com/nhs-bnssg-analytics/fingertips)
* `fingertipsR` [workbook](https://github.com/nhs-bnssg-analytics/fingertips/blob/master/R/01_fingertipsR_workbook.R)
* `fingertipscharts` [workbook](https://github.com/nhs-bnssg-analytics/fingertips/blob/master/R/02_fingertipscharts_workbook.R)
* [`fingertips`](https://docs.ropensci.org/fingertipsR/)
* [Fingertips webinar series from OHID](https://www.tickettailor.com/events/dhsc2)